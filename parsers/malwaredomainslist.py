from generic import indicator_type
from generic import headless_xsv
import ConfigParser
import datetime

def process(response):
    """ processes the csv response from malwaredomainslist.com""" 
    data = []
    headers=['date','URIObject','ipv4-addr','fqdn','description','registrar','asn']
    feeds_conf = ConfigParser.SafeConfigParser(allow_no_value=False)
    fcfg_success = feeds_conf.read('feeds.cfg')
    
    if not fcfg_success:
        logger.error('Reaper: Could not read feeds.cfg.')
        logger.error('HINT: make sure there is a feeds configuration file in the folder')
        return
    settings={}
    settings['confidence']=feeds_conf.get('malwaredomainslist','confidence')
    settings['impact']=feeds_conf.get('malwaredomainslist','impact')
    settings['campaign']=feeds_conf.get('malwaredomainslist','campaign')
    settings['type']=feeds_conf.get('malwaredomainslist','type')
    
    for row in headless_xsv(response,headers):
        # converting the date field 2014/12/03_08:50
        if row['date']:
            date=datetime.datetime.strptime(row['date'],'%Y/%m/%d_%H:%M')
        else:
            date=datetime.date.today()
        # appending the url
        if row['description']:
            desc=row['description']
        else:
            desc=settings['type']
        
        data.append({'value':row['URIObject'],'type':'URIObject','description':desc,'date':'%s' % date,'confidence':settings['confidence'],'impact':settings['impact'],'campaign':settings['campaign']})
        # appending the IP
        data.append({'value':row['ipv4-addr'],'type':'ipv4-addr','description':desc,'date':'%s' % date,'confidence':settings['confidence'],'impact':settings['impact'],'campaign':settings['campaign']})
        # appending the reverse-resolution domain
        data.append({'value':row['fqdn'],'type':'fqdn','description':desc,'date':'%s' % date,'confidence':settings['confidence'],'impact':settings['impact'],'campaign':settings['campaign']})
    return data